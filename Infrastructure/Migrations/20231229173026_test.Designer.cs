// <auto-generated />
using System;
using Infrastructure.Database.MySQLDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RealDatabase))]
    [Migration("20231229173026_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Birds.Bird", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanFly")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Birds");
                });

            modelBuilder.Entity("Domain.Models.Cats.Cat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c40fe003-8034-407b-bbda-4f5692e06826"),
                            LikesToPlay = false,
                            Name = "Charlie"
                        },
                        new
                        {
                            Id = new Guid("1e3d6759-deef-4a4f-954b-c61d8579ff71"),
                            LikesToPlay = true,
                            Name = "Niklas"
                        },
                        new
                        {
                            Id = new Guid("2b621148-9f90-4ee7-b9a8-30ee73677cad"),
                            LikesToPlay = true,
                            Name = "Johan"
                        },
                        new
                        {
                            Id = new Guid("00045678-1234-5678-1234-567812345671"),
                            LikesToPlay = true,
                            Name = "TestCatForUnitTests1"
                        },
                        new
                        {
                            Id = new Guid("00045678-1234-5678-1234-567812345672"),
                            LikesToPlay = true,
                            Name = "TestCatForUnitTests2"
                        },
                        new
                        {
                            Id = new Guid("00045678-1234-5678-1234-567812345673"),
                            LikesToPlay = true,
                            Name = "TestCatForUnitTests3"
                        },
                        new
                        {
                            Id = new Guid("01223456-1234-5678-1234-567812345674"),
                            LikesToPlay = true,
                            Name = "TestCatForUnitTests4"
                        });
                });

            modelBuilder.Entity("Domain.Models.Dogs.Dog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("43a1d7d2-117e-424c-a941-89bb90d9dd65"),
                            Name = "Björn"
                        },
                        new
                        {
                            Id = new Guid("811436cc-fa93-4b12-92ec-684e63ea8277"),
                            Name = "Patrik"
                        },
                        new
                        {
                            Id = new Guid("eda8c670-fd88-4b31-b48e-19b682757e40"),
                            Name = "Alfred"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345671"),
                            Name = "TestDogForUnitTests1"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345672"),
                            Name = "TestDogForUnitTests2"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345673"),
                            Name = "TestDogForUnitTests3"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345674"),
                            Name = "TestDogForUnitTests4"
                        });
                });

            modelBuilder.Entity("Domain.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Authorized")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
