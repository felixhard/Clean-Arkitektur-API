// <auto-generated />
using System;
using Infrastructure.Database.MySQLDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RealDatabase))]
    [Migration("20240207233628_Testar")]
    partial class Testar
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.AnimalUsers.AnimalUser", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Key");

                    b.HasIndex("AnimalId");

                    b.HasIndex("UserId");

                    b.ToTable("AnimalUsers");
                });

            modelBuilder.Entity("Domain.Models.Animals.Animal", b =>
                {
                    b.Property<Guid>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnimalId");

                    b.ToTable("Animals");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Animal");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Authorized")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fcdae6bb-ce54-441a-9e82-9dbc32e438bc"),
                            Authorized = true,
                            Password = "admin",
                            Role = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345674"),
                            Authorized = true,
                            Password = "password",
                            Role = "admin",
                            Username = "testUser2"
                        });
                });

            modelBuilder.Entity("Domain.Models.Animals.Birds.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animals.Animal");

                    b.Property<bool>("CanFly")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("cc5a37a3-3ca0-42c5-bb7b-031c052e78a3"),
                            Name = "Chip",
                            CanFly = false,
                            Color = "Red"
                        },
                        new
                        {
                            AnimalId = new Guid("7b2eb877-e944-4414-8049-a975e000c77b"),
                            Name = "Paulie",
                            CanFly = true,
                            Color = "Blue"
                        },
                        new
                        {
                            AnimalId = new Guid("1aa35381-9577-4730-9647-2080e12193b4"),
                            Name = "Polly",
                            CanFly = true,
                            Color = "Orange"
                        },
                        new
                        {
                            AnimalId = new Guid("94af6d4c-a9b6-4fa0-a950-41bac5ad7eb4"),
                            Name = "Ace",
                            CanFly = false,
                            Color = "Red"
                        },
                        new
                        {
                            AnimalId = new Guid("35986ab0-f95f-4113-a9ce-00a6b8bb8a54"),
                            Name = "Apollo",
                            CanFly = false,
                            Color = "Green"
                        },
                        new
                        {
                            AnimalId = new Guid("d1ca8cde-e71a-4e6c-bb4e-acd603e88a9a"),
                            Name = "Daffy",
                            CanFly = true,
                            Color = "Green"
                        },
                        new
                        {
                            AnimalId = new Guid("b0436532-b661-4e0b-a2dc-207b0ca8dcaf"),
                            Name = "Blue",
                            CanFly = true,
                            Color = "Purple"
                        },
                        new
                        {
                            AnimalId = new Guid("b1f436c8-269f-45f4-829e-5982a9b66568"),
                            Name = "Skye",
                            CanFly = false,
                            Color = "Yellow"
                        },
                        new
                        {
                            AnimalId = new Guid("a1a24eaa-7570-42ee-872e-effd3256a403"),
                            Name = "Jay",
                            CanFly = true,
                            Color = "Purple"
                        },
                        new
                        {
                            AnimalId = new Guid("d19790cc-9822-4d49-99c6-89441e0ea5e8"),
                            Name = "Maverick",
                            CanFly = true,
                            Color = "Yellow"
                        });
                });

            modelBuilder.Entity("Domain.Models.Animals.Cats.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animals.Animal");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("bit");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("512da4e1-ce86-423e-9471-7c240ed282f4"),
                            Name = "Jack",
                            Breed = "Siames",
                            LikesToPlay = true,
                            Weight = 3
                        },
                        new
                        {
                            AnimalId = new Guid("575cd3aa-76c1-4a28-a33b-a29f4564bd29"),
                            Name = "Signe",
                            Breed = "Ragdoll",
                            LikesToPlay = false,
                            Weight = 4
                        },
                        new
                        {
                            AnimalId = new Guid("6c7d4b8c-d6bd-4699-934e-431d4c9c3dfe"),
                            Name = "Rose",
                            Breed = "Bengal",
                            LikesToPlay = false,
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("9b34244c-a01e-47e4-84bb-c5179526a9f8"),
                            Name = "Mittens",
                            Breed = "Burma",
                            LikesToPlay = true,
                            Weight = 5
                        },
                        new
                        {
                            AnimalId = new Guid("1f538a9c-0b65-4476-8334-b7c083284a4c"),
                            Name = "Fred",
                            Breed = "Brittiskt korthår",
                            LikesToPlay = true,
                            Weight = 4
                        },
                        new
                        {
                            AnimalId = new Guid("ad9a7b30-5e24-4a2b-9a29-b4bc37e99b3f"),
                            Name = "Molly",
                            Breed = "Ragdoll",
                            LikesToPlay = false,
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("28d2c9ab-8681-4fe2-9126-0e6e9118fe5e"),
                            Name = "Charlie",
                            Breed = "Perser",
                            LikesToPlay = true,
                            Weight = 3
                        },
                        new
                        {
                            AnimalId = new Guid("59c83505-5403-481f-af0b-f1bb990551e3"),
                            Name = "Oscar",
                            Breed = "Burma",
                            LikesToPlay = true,
                            Weight = 4
                        },
                        new
                        {
                            AnimalId = new Guid("f8d047a7-4127-49fd-8e67-9b1b6e9ed719"),
                            Name = "Tiger",
                            Breed = "Perser",
                            LikesToPlay = false,
                            Weight = 5
                        },
                        new
                        {
                            AnimalId = new Guid("e6afd9fa-1aa8-4c6d-a4d8-5c3c94a97c31"),
                            Name = "Simba",
                            Breed = "Bengal",
                            LikesToPlay = true,
                            Weight = 6
                        });
                });

            modelBuilder.Entity("Domain.Models.Animals.Dogs.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animals.Animal");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.ToTable("Animals", t =>
                        {
                            t.Property("Breed")
                                .HasColumnName("Dog_Breed");

                            t.Property("Weight")
                                .HasColumnName("Dog_Weight");
                        });

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("db23e6d0-c8db-47eb-ab69-a9dd6edb8b7d"),
                            Name = "OldG",
                            Breed = "Labrador",
                            Weight = 10
                        },
                        new
                        {
                            AnimalId = new Guid("b4531a2b-9a47-496b-95c0-60081522ec4a"),
                            Name = "NewG",
                            Breed = "Bulldog",
                            Weight = 4
                        },
                        new
                        {
                            AnimalId = new Guid("c8c10db4-6e41-47ab-abbd-928bbb12b3d4"),
                            Name = "Björn",
                            Breed = "Schäfer",
                            Weight = 12
                        },
                        new
                        {
                            AnimalId = new Guid("b088ec7f-108d-4dbf-b0f0-4a1ff8373ba6"),
                            Name = "Patrik",
                            Breed = "Golden retriever",
                            Weight = 13
                        },
                        new
                        {
                            AnimalId = new Guid("dd426c1c-31c9-4176-b578-b962fe6351b0"),
                            Name = "Alfred",
                            Breed = "Pudel",
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("0c2761ba-e3b7-4012-93f8-d73feb334d73"),
                            Name = "Stanley",
                            Breed = "Labrador",
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("dff4c9e5-f5ad-4749-abc8-9d35ce78afa7"),
                            Name = "Rufus",
                            Breed = "Rottweiler",
                            Weight = 8
                        },
                        new
                        {
                            AnimalId = new Guid("9a4746cc-0b47-450a-8b2f-fa0d288fd3fe"),
                            Name = "Ludde",
                            Breed = "Boxer",
                            Weight = 9
                        },
                        new
                        {
                            AnimalId = new Guid("1a9ab18c-8f85-41f9-b7c0-0adc426271e0"),
                            Name = "Felix",
                            Breed = "Labrador",
                            Weight = 12
                        },
                        new
                        {
                            AnimalId = new Guid("6caa7ed5-899d-4097-9ac9-e867a038b958"),
                            Name = "Peppe",
                            Breed = "Boxer",
                            Weight = 8
                        });
                });

            modelBuilder.Entity("Domain.Models.AnimalUsers.AnimalUser", b =>
                {
                    b.HasOne("Domain.Models.Animals.Animal", "Animal")
                        .WithMany("AnimalUsers")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Users.User", "User")
                        .WithMany("AnimalUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Animals.Animal", b =>
                {
                    b.Navigation("AnimalUsers");
                });

            modelBuilder.Entity("Domain.Models.Users.User", b =>
                {
                    b.Navigation("AnimalUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
