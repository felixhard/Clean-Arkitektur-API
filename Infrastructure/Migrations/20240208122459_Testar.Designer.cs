// <auto-generated />
using System;
using Infrastructure.Database.MySQLDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RealDatabase))]
    [Migration("20240208122459_Testar")]
    partial class Testar
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.AnimalUsers.AnimalUser", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Key");

                    b.HasIndex("AnimalId");

                    b.HasIndex("UserId");

                    b.ToTable("AnimalUsers");
                });

            modelBuilder.Entity("Domain.Models.Animals.Animal", b =>
                {
                    b.Property<Guid>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnimalId");

                    b.ToTable("Animals");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Animal");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Authorized")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0e458c8-65e0-4558-b2fd-05e5d6b47f59"),
                            Authorized = true,
                            Password = "admin",
                            Role = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345674"),
                            Authorized = true,
                            Password = "password",
                            Role = "admin",
                            Username = "testUser2"
                        });
                });

            modelBuilder.Entity("Domain.Models.Animals.Birds.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animals.Animal");

                    b.Property<bool>("CanFly")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("c3ba763b-a5c9-4f4d-984e-ebb8a5e0e86b"),
                            Name = "Chip",
                            CanFly = false,
                            Color = "Red"
                        },
                        new
                        {
                            AnimalId = new Guid("e555ef02-794d-4acb-8fb4-0915a841744f"),
                            Name = "Paulie",
                            CanFly = true,
                            Color = "Blue"
                        },
                        new
                        {
                            AnimalId = new Guid("b70d4b9d-38e2-4cfa-b79a-5385fb18019c"),
                            Name = "Polly",
                            CanFly = true,
                            Color = "Orange"
                        },
                        new
                        {
                            AnimalId = new Guid("7bdab1b8-c0e8-436a-9090-2b250b13f3ad"),
                            Name = "Ace",
                            CanFly = false,
                            Color = "Red"
                        },
                        new
                        {
                            AnimalId = new Guid("5ecc1266-e301-4eee-83d9-da86adc7c4ef"),
                            Name = "Apollo",
                            CanFly = false,
                            Color = "Green"
                        },
                        new
                        {
                            AnimalId = new Guid("64fd742c-4baf-4d86-a9f7-afed65dd7796"),
                            Name = "Daffy",
                            CanFly = true,
                            Color = "Green"
                        },
                        new
                        {
                            AnimalId = new Guid("4e8e50e5-8587-4c89-8f19-011e9c810f18"),
                            Name = "Blue",
                            CanFly = true,
                            Color = "Purple"
                        },
                        new
                        {
                            AnimalId = new Guid("407e443f-1eca-403b-8609-779a35b51368"),
                            Name = "Skye",
                            CanFly = false,
                            Color = "Yellow"
                        },
                        new
                        {
                            AnimalId = new Guid("6cf7af72-ebdb-4374-99e6-4e621f5416b9"),
                            Name = "Jay",
                            CanFly = true,
                            Color = "Purple"
                        },
                        new
                        {
                            AnimalId = new Guid("103b423a-9ea0-4e8a-ae4b-4c3ada5c6cb7"),
                            Name = "Maverick",
                            CanFly = true,
                            Color = "Yellow"
                        });
                });

            modelBuilder.Entity("Domain.Models.Animals.Cats.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animals.Animal");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("bit");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("3ac8b69e-7e1c-4ad9-98c4-2d46511f9f87"),
                            Name = "Jack",
                            Breed = "Siames",
                            LikesToPlay = true,
                            Weight = 3
                        },
                        new
                        {
                            AnimalId = new Guid("04966dde-285b-4687-932e-d4ae2d06cfba"),
                            Name = "Signe",
                            Breed = "Ragdoll",
                            LikesToPlay = false,
                            Weight = 4
                        },
                        new
                        {
                            AnimalId = new Guid("a414c39b-2067-49ef-9958-23bd9aa480b1"),
                            Name = "Rose",
                            Breed = "Bengal",
                            LikesToPlay = false,
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("c0962cf6-53b7-4f4c-83ff-18095421b545"),
                            Name = "Mittens",
                            Breed = "Burma",
                            LikesToPlay = true,
                            Weight = 5
                        },
                        new
                        {
                            AnimalId = new Guid("b46b42df-a055-475a-b5e0-cde15c5f3777"),
                            Name = "Fred",
                            Breed = "Brittiskt korthår",
                            LikesToPlay = true,
                            Weight = 4
                        },
                        new
                        {
                            AnimalId = new Guid("e031ea3a-296d-4f26-9638-1b79c0f9f461"),
                            Name = "Molly",
                            Breed = "Ragdoll",
                            LikesToPlay = false,
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("054ca817-19bb-4133-a03e-524cd9e372af"),
                            Name = "Charlie",
                            Breed = "Perser",
                            LikesToPlay = true,
                            Weight = 3
                        },
                        new
                        {
                            AnimalId = new Guid("d375bade-4097-4c49-866d-66eeb34f716e"),
                            Name = "Oscar",
                            Breed = "Burma",
                            LikesToPlay = true,
                            Weight = 4
                        },
                        new
                        {
                            AnimalId = new Guid("e552a0f0-8154-4851-80b7-95fcb760f7ca"),
                            Name = "Tiger",
                            Breed = "Perser",
                            LikesToPlay = false,
                            Weight = 5
                        },
                        new
                        {
                            AnimalId = new Guid("5a1ceb77-ad2f-41d4-80da-c59501674056"),
                            Name = "Simba",
                            Breed = "Bengal",
                            LikesToPlay = true,
                            Weight = 6
                        });
                });

            modelBuilder.Entity("Domain.Models.Animals.Dogs.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animals.Animal");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.ToTable("Animals", t =>
                        {
                            t.Property("Breed")
                                .HasColumnName("Dog_Breed");

                            t.Property("Weight")
                                .HasColumnName("Dog_Weight");
                        });

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("c168a5e4-e5e3-40ae-b90f-c1279c471949"),
                            Name = "OldG",
                            Breed = "Labrador",
                            Weight = 10
                        },
                        new
                        {
                            AnimalId = new Guid("e635a129-8e70-46e8-9af4-55b1f9008ade"),
                            Name = "NewG",
                            Breed = "Bulldog",
                            Weight = 4
                        },
                        new
                        {
                            AnimalId = new Guid("5e5969fd-0a2b-41a8-9a96-58b8b616a007"),
                            Name = "Björn",
                            Breed = "Schäfer",
                            Weight = 12
                        },
                        new
                        {
                            AnimalId = new Guid("f2639953-b64a-49b2-a5cb-c345fd242103"),
                            Name = "Patrik",
                            Breed = "Golden retriever",
                            Weight = 13
                        },
                        new
                        {
                            AnimalId = new Guid("22e95b1f-e16e-4723-8437-92a650db5eec"),
                            Name = "Alfred",
                            Breed = "Pudel",
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("66278b9c-9710-4c69-96f5-e087581a4472"),
                            Name = "Stanley",
                            Breed = "Labrador",
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("3f7a5ad2-1707-4b5d-bdef-115bc95a298b"),
                            Name = "Rufus",
                            Breed = "Rottweiler",
                            Weight = 8
                        },
                        new
                        {
                            AnimalId = new Guid("e8e166d7-28ce-464c-aa14-24435ca17e2e"),
                            Name = "Ludde",
                            Breed = "Boxer",
                            Weight = 9
                        },
                        new
                        {
                            AnimalId = new Guid("63bfd80d-ebc0-45b9-b0f2-9531411a4f09"),
                            Name = "Felix",
                            Breed = "Labrador",
                            Weight = 12
                        },
                        new
                        {
                            AnimalId = new Guid("80e7fbe3-e82d-4c03-8cce-aef984f69497"),
                            Name = "Peppe",
                            Breed = "Boxer",
                            Weight = 8
                        });
                });

            modelBuilder.Entity("Domain.Models.AnimalUsers.AnimalUser", b =>
                {
                    b.HasOne("Domain.Models.Animals.Animal", "Animal")
                        .WithMany("AnimalUsers")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Users.User", "User")
                        .WithMany("AnimalUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Animals.Animal", b =>
                {
                    b.Navigation("AnimalUsers");
                });

            modelBuilder.Entity("Domain.Models.Users.User", b =>
                {
                    b.Navigation("AnimalUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
