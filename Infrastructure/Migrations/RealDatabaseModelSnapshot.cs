// <auto-generated />
using System;
using Infrastructure.Database.MySQLDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RealDatabase))]
    partial class RealDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.AnimalUsers.AnimalUser", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Key");

                    b.HasIndex("AnimalId");

                    b.HasIndex("UserId");

                    b.ToTable("AnimalUsers");
                });

            modelBuilder.Entity("Domain.Models.Animals.Animal", b =>
                {
                    b.Property<Guid>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnimalId");

                    b.ToTable("Animals");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Animal");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Authorized")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2e77d588-08bd-4bb5-82ac-a303d0c75f7a"),
                            Authorized = true,
                            Password = "admin",
                            Role = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345674"),
                            Authorized = true,
                            Password = "password",
                            Role = "admin",
                            Username = "testUser2"
                        });
                });

            modelBuilder.Entity("Domain.Models.Animals.Birds.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animals.Animal");

                    b.Property<bool>("CanFly")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("2858606a-a8a5-4730-9a75-e8811cc6343a"),
                            Name = "Chip",
                            CanFly = false,
                            Color = "Red"
                        },
                        new
                        {
                            AnimalId = new Guid("19d0adee-cf54-4089-aaeb-e9ea3136126c"),
                            Name = "Paulie",
                            CanFly = true,
                            Color = "Blue"
                        },
                        new
                        {
                            AnimalId = new Guid("88a072db-4121-4096-b927-573f34f359e2"),
                            Name = "Polly",
                            CanFly = true,
                            Color = "Orange"
                        },
                        new
                        {
                            AnimalId = new Guid("0eb630e5-81d0-4fed-a2a1-0a05f9428879"),
                            Name = "Ace",
                            CanFly = false,
                            Color = "Red"
                        },
                        new
                        {
                            AnimalId = new Guid("4fcbcee6-2299-42d2-8030-51d65b61b99f"),
                            Name = "Apollo",
                            CanFly = false,
                            Color = "Green"
                        },
                        new
                        {
                            AnimalId = new Guid("1ab0c153-8d3a-4df4-b120-3362b3d06aac"),
                            Name = "Daffy",
                            CanFly = true,
                            Color = "Green"
                        },
                        new
                        {
                            AnimalId = new Guid("3cfafaaa-dbe2-473f-8ad6-204cc1849589"),
                            Name = "Blue",
                            CanFly = true,
                            Color = "Purple"
                        },
                        new
                        {
                            AnimalId = new Guid("d23ac2e1-b253-4e93-8dc0-9a6a36a9e211"),
                            Name = "Skye",
                            CanFly = false,
                            Color = "Yellow"
                        },
                        new
                        {
                            AnimalId = new Guid("eee7247c-005c-4d0c-a884-69741a775155"),
                            Name = "Jay",
                            CanFly = true,
                            Color = "Purple"
                        },
                        new
                        {
                            AnimalId = new Guid("e35dc0b5-3023-4431-985f-e5cb1e76e735"),
                            Name = "Maverick",
                            CanFly = true,
                            Color = "Yellow"
                        });
                });

            modelBuilder.Entity("Domain.Models.Animals.Cats.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animals.Animal");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("bit");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("afb2d71a-9591-4e22-9a2d-b3ef0181d460"),
                            Name = "Jack",
                            Breed = "Siames",
                            LikesToPlay = true,
                            Weight = 3
                        },
                        new
                        {
                            AnimalId = new Guid("3874e855-83f3-4000-91ee-4c89aaa7dcc9"),
                            Name = "Signe",
                            Breed = "Ragdoll",
                            LikesToPlay = false,
                            Weight = 4
                        },
                        new
                        {
                            AnimalId = new Guid("7b3760e2-2314-4466-a458-f710b1eb6fae"),
                            Name = "Rose",
                            Breed = "Bengal",
                            LikesToPlay = false,
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("be23b8a6-6244-4327-a745-cbd420b72ed5"),
                            Name = "Mittens",
                            Breed = "Burma",
                            LikesToPlay = true,
                            Weight = 5
                        },
                        new
                        {
                            AnimalId = new Guid("9c9ee981-39d8-4265-b8f1-54fbf48610f6"),
                            Name = "Fred",
                            Breed = "Brittiskt korthår",
                            LikesToPlay = true,
                            Weight = 4
                        },
                        new
                        {
                            AnimalId = new Guid("e915a651-1b38-4101-bd3d-556aeb9f1476"),
                            Name = "Molly",
                            Breed = "Ragdoll",
                            LikesToPlay = false,
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("a979caf0-c2eb-47da-9062-b78cd54d88e8"),
                            Name = "Charlie",
                            Breed = "Perser",
                            LikesToPlay = true,
                            Weight = 3
                        },
                        new
                        {
                            AnimalId = new Guid("c12b8f10-6fe4-420e-93cc-a03ae3e2fb7e"),
                            Name = "Oscar",
                            Breed = "Burma",
                            LikesToPlay = true,
                            Weight = 4
                        },
                        new
                        {
                            AnimalId = new Guid("d3964e80-114c-476d-acf6-59a52f1bfaa7"),
                            Name = "Tiger",
                            Breed = "Perser",
                            LikesToPlay = false,
                            Weight = 5
                        },
                        new
                        {
                            AnimalId = new Guid("65193620-8452-4785-b77c-6bda6fd54778"),
                            Name = "Simba",
                            Breed = "Bengal",
                            LikesToPlay = true,
                            Weight = 6
                        });
                });

            modelBuilder.Entity("Domain.Models.Animals.Dogs.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animals.Animal");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.ToTable("Animals", t =>
                        {
                            t.Property("Breed")
                                .HasColumnName("Dog_Breed");

                            t.Property("Weight")
                                .HasColumnName("Dog_Weight");
                        });

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("78ab35a1-23ac-4111-9a9e-c19ba5b545fc"),
                            Name = "OldG",
                            Breed = "Labrador",
                            Weight = 10
                        },
                        new
                        {
                            AnimalId = new Guid("24f49422-7783-499b-a42e-d2628f9c24e9"),
                            Name = "NewG",
                            Breed = "Bulldog",
                            Weight = 4
                        },
                        new
                        {
                            AnimalId = new Guid("1ca256b7-a6c0-4ed9-a079-b61f8397dce8"),
                            Name = "Björn",
                            Breed = "Schäfer",
                            Weight = 12
                        },
                        new
                        {
                            AnimalId = new Guid("42ebe9ad-de55-4f32-ab6a-6d2a3a08aac5"),
                            Name = "Patrik",
                            Breed = "Golden retriever",
                            Weight = 13
                        },
                        new
                        {
                            AnimalId = new Guid("ef974ade-40d6-4fe3-b98c-49d6034d2b78"),
                            Name = "Alfred",
                            Breed = "Pudel",
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("dcb8296e-56e7-4470-b8c6-4d17042468e9"),
                            Name = "Stanley",
                            Breed = "Labrador",
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("d2af9862-065c-4093-b0ec-0a939f8cc8b3"),
                            Name = "Rufus",
                            Breed = "Rottweiler",
                            Weight = 8
                        },
                        new
                        {
                            AnimalId = new Guid("81a609b1-ab26-41fe-b9f4-e8b58b293f9d"),
                            Name = "Ludde",
                            Breed = "Boxer",
                            Weight = 9
                        },
                        new
                        {
                            AnimalId = new Guid("d86cfc81-17ec-4284-8c5f-8cb5c0c45403"),
                            Name = "Felix",
                            Breed = "Labrador",
                            Weight = 12
                        },
                        new
                        {
                            AnimalId = new Guid("36b4abf1-97ff-45f6-88d4-215f827ad85e"),
                            Name = "Peppe",
                            Breed = "Boxer",
                            Weight = 8
                        });
                });

            modelBuilder.Entity("Domain.Models.AnimalUsers.AnimalUser", b =>
                {
                    b.HasOne("Domain.Models.Animals.Animal", "Animal")
                        .WithMany("AnimalUsers")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Users.User", "User")
                        .WithMany("AnimalUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Animals.Animal", b =>
                {
                    b.Navigation("AnimalUsers");
                });

            modelBuilder.Entity("Domain.Models.Users.User", b =>
                {
                    b.Navigation("AnimalUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
